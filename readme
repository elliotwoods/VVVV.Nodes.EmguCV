https://github.com/elliotwoods/VVVV.Nodes.EmguCV

Simple video playback / video capture using EmguCV in VVVV
Options are open for full replacement of DirectShow, including spreadable video playback, CV manipulation, access to images in dynamic plugins, CV in dynamic plugins

EmguCV is dual license (GPL/commercial). So this code is GPL, and you should be wary that also your code must be GPL if it employs this.
Suggest move to opencvsharp http://code.google.com/p/opencvsharp/
or discussion with EmguCV about a licensing model for the VVVV community. 
Ensure that all the OpenCV dll's + Emgu.CV.dll and Emgu.Util.dll are in the same folder as the plugin. Check Prerequisites.zip (there's an old version of the plugins in there as well)

Notes for video playback:
1. This isn't going to employ any fancy hardware optimisation. If you need to chunk big video files, suggest sticking with FileStream + clever codecs.
2. No audio, probably never will have
3. Works with pretty much all the AVI's i threw at it (which isn't that many on this PC). Feedback welcome!


The ImageRGB type wraps Image<Bgr, byte> (which actually is RGB not BGR strangely), can be used for lots of things. We can make nodes in minutes to supply video from lots of sources (e.g. CLEye, Point Grey, BlackMagic) and then use them with the full chain of CV / texture utils.

However, it's likely we should consider creating a resource dll VVVV.CV.dll or similar which defines some utility types and nodes. Vux previously suggested having a flag to say whether the image is fresh, so we dont process it further down the line unles changes have been made. ImageRGB wrapper class has this functionality, but is not fully tested yet. I suggest more capable VVVV platform people (e.g. vux, Elias) pitch in on that wrapper. 

In conclusion, this is a proof of concept, and a temporary solution for some projects. I expect more capable hands will come along and rewrite from scratch before this becomes a solid platform to work on, but if people have suggestions on developing this in the time being, they'd be more than welcome! Please use issues on github


//-------------------
TODO
//-------------------
//
Naming convention
currently we have VideoIn and VideoPlayer
i.e. [Asset][What it does]

Create ICaptureNode interface for simplifying development of capture nodes

Double buffering on ICaptureNode (get rid of low fps issue on VideoIn)

//
//-------------------



//-------------------
INTERFACE SUGGESTIONS
//-------------------
ICaptureNode
ICaptureInstance
IImageInputNode (e.g. AsTexture, FaceTracker)
//-------------------



//-------------------
NODE SUGGESTIONS
//-------------------
+						adds colour values
-						subtracts colour values
Queue
Cons

ImageLoad				Loads a set of images into RAM as ImageRGB's. Either use OpenCV's image loader or .NET's Bitmap class (probably quicker)
ImageSave
VideoSave				Built into CV so should be decent performance

AsTexture(Greyscale)	Deals with new type ImageGreyscale

FaceTracker				(alg!!! :) )
Contour
FindChessboardCorners

StereoCalibrate

AsImage					Convert texture to image (AsVideo in existing DirectShow). - requires texture input on plugins (i.e. not possible yet)
//-------------------